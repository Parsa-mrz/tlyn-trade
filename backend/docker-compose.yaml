# Note: This compose is for development , not production.
volumes:
  pgdata: {}
  laravel_storage: {}
  laravel_public: { }

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tlyn_app
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    volumes:
      - .:/var/www/html  # Bind mount for real-time updates in development
      - ./storage/logs:/var/www/html/storage/logs # Bind mount for real-time updates in development
      - ./tests:/var/www/html/tests # Bind mount for real-time updates in development
      - laravel_storage:/var/www/html/storage
      - laravel_public:/var/www/html/public
    depends_on:
      - db
    expose:
      - "9000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9000"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16
    container_name: tlyn_db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # Expose PostgreSQL to the host for development
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: tlyn_nginx
    ports:
      - "80:80"
    volumes:
      - laravel_public:/var/www/html/public
      - laravel_storage:/var/www/html/storage
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    restart: always
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: tlyn_redis
    env_file:
      - .env
    ports:
      - "6379:6379"  # Expose Redis to the host for development
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
